{
  "service": {
    "service": "aura-bridge-ai-cloud",
    "serviceObject": {
      "name": "aura-bridge-ai-cloud"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "region": "us-east-1",
      "stage": "prod",
      "httpApi": {
        "cors": {
          "allowedOrigins": [
            "*"
          ],
          "allowedMethods": [
            "GET",
            "OPTIONS"
          ],
          "allowedHeaders": [
            "*"
          ],
          "maxAge": 600
        }
      },
      "environment": {
        "BUCKET_NAME": "aura-bridge-ai-cloud-prod-artifacts",
        "TABLE_NAME": "aura-bridge-ai-cloud-prod-jobs",
        "IOT_TOPIC": "auraBridge/gestures/path",
        "THING_NAME": "Aura-Bridge-IOT",
        "BEDROCK_ENABLED": "true",
        "BEDROCK_MODEL": "anthropic.claude-3-haiku-20240307-v1:0"
      },
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "IngestLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aura-bridge-ai-cloud-prod-ingest"
            }
          },
          "ApiLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aura-bridge-ai-cloud-prod-api"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "aura-bridge-ai-cloud",
                        "prod",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/aura-bridge-ai-cloud-prod*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/aura-bridge-ai-cloud-prod*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "aura-bridge-ai-cloud",
                    "prod",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "IngestLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aura-bridge-ai-cloud/prod/1761429958194-2025-10-25T22:05:58.194Z/aura-bridge-ai-cloud.zip"
              },
              "Handler": "functions/ingest.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "aura-bridge-ai-cloud-prod-ingest",
              "MemorySize": 1024,
              "Timeout": 60,
              "Description": "Ingest from IoT, validate, call Bedrock, store to S3+DDB",
              "Environment": {
                "Variables": {
                  "BUCKET_NAME": "aura-bridge-ai-cloud-prod-artifacts",
                  "TABLE_NAME": "aura-bridge-ai-cloud-prod-jobs",
                  "IOT_TOPIC": "auraBridge/gestures/path",
                  "THING_NAME": "Aura-Bridge-IOT",
                  "BEDROCK_ENABLED": "true",
                  "BEDROCK_MODEL": "anthropic.claude-3-haiku-20240307-v1:0"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IngestIamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "IngestIamRoleLambdaExecution",
              "IngestLogGroup"
            ]
          },
          "ApiLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aura-bridge-ai-cloud/prod/1761429958194-2025-10-25T22:05:58.194Z/aura-bridge-ai-cloud.zip"
              },
              "Handler": "functions/api.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "aura-bridge-ai-cloud-prod-api",
              "MemorySize": 1024,
              "Timeout": 15,
              "Description": "Read latest path/status/code",
              "Environment": {
                "Variables": {
                  "BUCKET_NAME": "aura-bridge-ai-cloud-prod-artifacts",
                  "TABLE_NAME": "aura-bridge-ai-cloud-prod-jobs",
                  "IOT_TOPIC": "auraBridge/gestures/path",
                  "THING_NAME": "Aura-Bridge-IOT",
                  "BEDROCK_ENABLED": "true",
                  "BEDROCK_MODEL": "anthropic.claude-3-haiku-20240307-v1:0"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "ApiIamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ApiIamRoleLambdaExecution",
              "ApiLogGroup"
            ]
          },
          "IngestLambdaVersionsQMnEdgwAQTiCSjVX7lmabI4zSyDzPbmOvXcFCg17M": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "IngestLambdaFunction"
              },
              "CodeSha256": "QLDz5HyE3RiSy+k+XbwNwSee0R3fhDPQfFfKvE5qBj0=",
              "Description": "Ingest from IoT, validate, call Bedrock, store to S3+DDB"
            }
          },
          "ApiLambdaVersionlK2KVKAiIIvCMWmOfepWnGF883pTVJvgKONJiTOes": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ApiLambdaFunction"
              },
              "CodeSha256": "QLDz5HyE3RiSy+k+XbwNwSee0R3fhDPQfFfKvE5qBj0=",
              "Description": "Read latest path/status/code"
            }
          },
          "IngestIotTopicRule1": {
            "Type": "AWS::IoT::TopicRule",
            "Properties": {
              "TopicRulePayload": {
                "RuleDisabled": false,
                "Sql": "SELECT clientid() as clientId, topic() as topic, * FROM 'auraBridge/gestures/path'",
                "Actions": [
                  {
                    "Lambda": {
                      "FunctionArn": {
                        "Fn::GetAtt": [
                          "IngestLambdaFunction",
                          "Arn"
                        ]
                      }
                    }
                  }
                ]
              }
            }
          },
          "IngestLambdaPermissionIotTopicRule1": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "IngestLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "iot.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":iot:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":rule/",
                    {
                      "Ref": "IngestIotTopicRule1"
                    }
                  ]
                ]
              }
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "prod-aura-bridge-ai-cloud",
              "ProtocolType": "HTTP",
              "CorsConfiguration": {
                "AllowHeaders": [
                  "*"
                ],
                "AllowMethods": [
                  "GET",
                  "OPTIONS"
                ],
                "AllowOrigins": [
                  "*"
                ],
                "MaxAge": 600
              }
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "ApiLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ApiLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationApi": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetLatestStatus": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /latest/status",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationApi"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationApi"
          },
          "HttpApiRouteGetLatestPath": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /latest/path",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationApi"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationApi"
          },
          "HttpApiRouteGetLatestCode": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /latest/code",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationApi"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationApi"
          },
          "IngestIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "aura-bridge-ai-cloud",
                        "prod",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/aura-bridge-ai-cloud-prod-ingest:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "s3:PutObject",
                          "s3:GetObject"
                        ],
                        "Resource": "arn:aws:s3:::aura-bridge-ai-cloud-prod-artifacts/*"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:PutItem",
                          "dynamodb:UpdateItem",
                          "dynamodb:GetItem"
                        ],
                        "Resource": "arn:aws:dynamodb:us-east-1:*:table/aura-bridge-ai-cloud-prod-jobs"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "bedrock:InvokeModel"
                        ],
                        "Resource": "*"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "aura-bridge-ai-cloud",
                    "prod",
                    "ingest",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          },
          "ApiIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "aura-bridge-ai-cloud",
                        "prod",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/aura-bridge-ai-cloud-prod-api:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:GetItem",
                          "dynamodb:Query",
                          "dynamodb:Scan"
                        ],
                        "Resource": "arn:aws:dynamodb:us-east-1:*:table/aura-bridge-ai-cloud-prod-jobs"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "s3:GetObject"
                        ],
                        "Resource": "arn:aws:s3:::aura-bridge-ai-cloud-prod-artifacts/*"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "aura-bridge-ai-cloud",
                    "prod",
                    "api",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          },
          "ArtifactsBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "aura-bridge-ai-cloud-prod-artifacts",
              "VersioningConfiguration": {
                "Status": "Enabled"
              },
              "PublicAccessBlockConfiguration": {
                "BlockPublicAcls": true,
                "BlockPublicPolicy": true,
                "IgnorePublicAcls": true,
                "RestrictPublicBuckets": true
              }
            }
          },
          "JobsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "aura-bridge-ai-cloud-prod-jobs",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "jobId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "jobId",
                  "KeyType": "HASH"
                }
              ]
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-aura-bridge-ai-cloud-prod-ServerlessDeploymentBucketName"
            }
          },
          "IngestLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "IngestLambdaVersionsQMnEdgwAQTiCSjVX7lmabI4zSyDzPbmOvXcFCg17M"
            },
            "Export": {
              "Name": "sls-aura-bridge-ai-cloud-prod-IngestLambdaFunctionQualifiedArn"
            }
          },
          "ApiLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ApiLambdaVersionlK2KVKAiIIvCMWmOfepWnGF883pTVJvgKONJiTOes"
            },
            "Export": {
              "Name": "sls-aura-bridge-ai-cloud-prod-ApiLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-aura-bridge-ai-cloud-prod-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-aura-bridge-ai-cloud-prod-HttpApiUrl"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "plugins": [
      "serverless-iam-roles-per-function"
    ],
    "pluginsData": {},
    "functions": {
      "ingest": {
        "handler": "functions/ingest.handler",
        "timeout": 60,
        "memorySize": 1024,
        "description": "Ingest from IoT, validate, call Bedrock, store to S3+DDB",
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"IngestIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][1]"
          },
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"IngestIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][2]"
          },
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"IngestIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][3]"
          }
        ],
        "events": [
          {
            "iot": {
              "sql": "SELECT clientid() as clientId, topic() as topic, * FROM 'auraBridge/gestures/path'"
            }
          }
        ],
        "name": "aura-bridge-ai-cloud-prod-ingest",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "IngestLambdaVersionsQMnEdgwAQTiCSjVX7lmabI4zSyDzPbmOvXcFCg17M"
      },
      "api": {
        "handler": "functions/api.handler",
        "timeout": 15,
        "description": "Read latest path/status/code",
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][1]"
          },
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][2]"
          }
        ],
        "events": [
          {
            "httpApi": {
              "method": "get",
              "path": "/latest/status"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/latest/status"
          },
          {
            "httpApi": {
              "method": "get",
              "path": "/latest/path"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/latest/path"
          },
          {
            "httpApi": {
              "method": "get",
              "path": "/latest/code"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/latest/code"
          }
        ],
        "name": "aura-bridge-ai-cloud-prod-api",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "ApiLambdaVersionlK2KVKAiIIvCMWmOfepWnGF883pTVJvgKONJiTOes"
      }
    },
    "resources": {
      "Resources": {
        "ArtifactsBucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "BucketName": "aura-bridge-ai-cloud-prod-artifacts",
            "VersioningConfiguration": {
              "Status": "Enabled"
            },
            "PublicAccessBlockConfiguration": {
              "BlockPublicAcls": true,
              "BlockPublicPolicy": true,
              "IgnorePublicAcls": true,
              "RestrictPublicBuckets": true
            }
          }
        },
        "JobsTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "aura-bridge-ai-cloud-prod-jobs",
            "BillingMode": "PAY_PER_REQUEST",
            "AttributeDefinitions": [
              {
                "AttributeName": "jobId",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "jobId",
                "KeyType": "HASH"
              }
            ]
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "aura-bridge-ai-cloud",
      "frameworkVersion": "3",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/Users/rishabhagrawal/Desktop/Hack 2025/cloud/.serverless/aura-bridge-ai-cloud.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/aura-bridge-ai-cloud/prod/1761429958194-2025-10-25T22:05:58.194Z",
    "artifact": "aura-bridge-ai-cloud.zip"
  }
}